{% extends "layout.twig" %}

{% block title %}
    {{ title }}
{% endblock %}

{% block header %}
    {% include "snippets/header-logged-in.twig" %}
{% endblock %}

{% block content %}

    <form class="loginform" action="" method="post" id="loginform">
        <div class="centerwrapper">
            <div class="hint error">
                <strong>{{ error }}</strong>
            </div>
            <label for="textinput-username" class="label-username">
                <input type="text" name="user" value="{{ user }}" id="user" class="textinput-username"
                       placeholder="Username">
            </label>
            <strong class="separator at">@</strong>
            <label for="textinput-host" class="label-host">
                <input type="text" name="host" value="{{ host }}" id="host" class="textinput-host"
                       placeholder="localhost">
            </label>
            <strong class="separator port">:8086</strong>
            <label for="passwordinput" class="label-password">
                <input type="password" name="pw" value="" id="pw" class="passwordinput" placeholder="Password">
            </label>
            <input type="submit" class="btn btn-secondary">
        </div>
    </form>

    <section class="sectionbox prev-logins">
        <div class="sectionheader">
            <h2>Previous Logins</h2>
        </div>

        <div class="sectionbody">

            <!-- replace this static list with the real data! -->
            <ul class="no-bullet zebralist" id="js_prev_logins_list">
            </ul>


        </div>
    </section>
{% endblock content %}

{% block javascripts %}
    <script type="text/javascript">
        $(document).ready(function () {

            listPreviousLogins();
            onClickPreviousLogins();

            function listPreviousLogins() {
                var last_logins = readCookie("last_logins");

                if (!undefined === last_logins) {
                    var logins = last_logins.split("|"),
                        list = $('#js_prev_logins_list');

                    for (var i = logins.length - 1; i >= 0; i--) {
                        list.append('<li><a href="#" class="login_link"></a></li><');
                        $('.login_link').innerHTML = logins[i];
                    }
                }

            }

            function readCookie(name) {
                name += '=';
                var ca = document.cookie.split(/;\s*/);

                for (var i = ca.length - 1; i >= 0; i--)
                    if (!ca[i].indexOf(name))
                        return ca[i].replace(name, '');
            }

            function onClickPreviousLogins() {
                var link = $('.login_link');

                if (!undefined === link) {
                    var link_data = link.innerHTML.split('@');

                    link.on('click', function () {
                        $('#user').val(link_data[0]);
                        $('#host').val(link_data[1]);
                    })
                }

            }

        });
    </script>
{% endblock javascripts %}


