{% extends "layout.twig" %}

{% block title %}
    {{ title }}
{% endblock %}

{% block header %}
    {% include "snippets/header.twig" %}
{% endblock %}

{% block content %}

    <form class="loginform" action="" method="post" id="loginform">
        <div class="centerwrapper">
            {% if error %}
                <div class="hint error">
                    <strong>{{ error }}</strong>
                </div>
            {% endif %}

            <label for="textinput-username" class="label-username">
                <input type="text" name="user" value="{{ user }}" id="user" class="textinput-username"
                       placeholder="Username">
            </label>
            <strong class="separator at">@</strong>
            <label for="textinput-host" class="label-host">
                <input type="text" name="host" value="{{ host }}" id="host" class="textinput-host"
                       placeholder="localhost">
            </label>
            <strong class="separator port">:8086</strong>
            <label for="passwordinput" class="label-password">
                <input type="password" name="pw" value="" id="pw" class="passwordinput" placeholder="Password">
            </label>
            <input type="submit" class="btn btn-secondary">
        </div>
    </form>

    <section class="sectionbox prev-logins">
        <div class="sectionheader">
            <h2>Previous Logins</h2>
        </div>

        <div class="sectionbody">

            <!-- replace this static list with the real data! -->
            <ul class="no-bullet zebralist">
                <script language="javascript">listPreviousLogins();</script>
            </ul>
        </div>
    </section>

    <script language="javascript">
        function listPreviousLogins() {
            var last_logins = urldecode(readCookie("last_logins"));
            //document.write( "all : " + last_logins + "<br><br><br>");
            var show_max = 30;
            var commandlist = last_logins.split("|")
            var found = commandlist.length;
            for (i = found - 1; i >= found - show_max; i--) {
                //  var tokens =  commandlist[i].split("#");

                document.write("<li class='listitem'><a href=\"javascript:setLogin('" + commandlist[i] + "');\" class=\"celllink\">" + commandlist[i] + "</a></li>");
            }
        }


        function setLogin(command) {
            document.getElementById("query").value = command;
        }

        function urldecode(str) {
            return decodeURIComponent((str + '').replace(/\+/g, '%20'));
        }

        function readCookie(name) {
            name += '=';
            for (var ca = document.cookie.split(/;\s*/), i = ca.length - 1; i >= 0; i--)
                if (!ca[i].indexOf(name))
                    return ca[i].replace(name, '');
        }
    </script>

{% endblock content %}



